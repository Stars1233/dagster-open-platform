type: dagster_open_platform.lib.SnowflakeCreateOrRefreshComponent
attributes:
  name: stage_common_room_activities
  database_name: "aws"
  schema_name: "{{ schema_from_env() }}"
  type: "stage"
  role: AWS_WRITER
  options:
    url: "s3://{{ env('COMMON_ROOM_BUCKET') }}/data/Activity"
    storage_integration: "{{ env('COMMON_ROOM_STORAGE_INTEGRATION') }}"
    directory:
      enable: true
    file_format:
      type: JSON
      strip_outer_array: true
      file_extension: ".jsonl"
  asset_attributes:
    description: "Snowflake stage for Activity export data."
    automation_condition: "{{ automation_condition.on_cron('0 3 * * *') }}"
    group_name: "aws_stages"

---

type: dagster_open_platform.lib.SnowflakeCreateOrRefreshComponent
attributes:
  name: stage_common_room_community_members
  database_name: "aws"
  schema_name: "{{ schema_from_env() }}"
  type: "stage"
  role: AWS_WRITER
  options:
    url: "s3://{{ env('COMMON_ROOM_BUCKET') }}/data/CommunityMember"
    storage_integration: "{{ env('COMMON_ROOM_STORAGE_INTEGRATION') }}"
    directory:
      enable: true
    file_format:
      type: JSON
      strip_outer_array: true
      file_extension: ".jsonl"
  asset_attributes:
    description: "Snowflake stage for CommunityMember export data."
    automation_condition: "{{ automation_condition.on_cron('0 3 * * *') }}"
    group_name: "aws_stages"

---

type: dagster_open_platform.lib.SnowflakeCreateOrRefreshComponent
attributes:
  name: stage_common_room_groups
  database_name: "aws"
  schema_name: "{{ schema_from_env() }}"
  type: "stage"
  role: AWS_WRITER
  options:
    url: "s3://{{ env('COMMON_ROOM_BUCKET') }}/data/Group"
    storage_integration: "{{ env('COMMON_ROOM_STORAGE_INTEGRATION') }}"
    directory:
      enable: true
    file_format:
      type: JSON
      strip_outer_array: true
      file_extension: ".jsonl"
  asset_attributes:
    description: "Snowflake stage for Group export data."
    automation_condition: "{{ automation_condition.on_cron('0 3 * * *') }}"
    group_name: "aws_stages"

---

type: dagster_open_platform.lib.SnowflakeCreateOrRefreshComponent
attributes:
  name: ext_common_room_activities
  database_name: "aws"
  schema_name: "{{ schema_from_env() }}"
  type: "external table"
  role: AWS_WRITER
  partition_by: REPLICATION_DATE
  columns:
    - name: FILENAME
      type: VARCHAR
      as: METADATA$FILENAME
    - name: REPLICATION_DATE
      type: DATE
      as: "cast(split_part(METADATA$FILENAME, '/', 3) || '-' || split_part(METADATA$FILENAME, '/', 4) || '-' || split_part(METADATA$FILENAME, '/', 5) as date)"
  options:
    location: "@stage_common_room_activities"
    file_format:
      type: JSON
      strip_outer_array: true
      file_extension: ".jsonl"
    pattern: ".*[.]jsonl"
    auto_refresh: false
    refresh_on_create: true
    comment: "External table for stage stage_common_room_activities"
  asset_attributes:
    description: "Snowflake external table for Activity export data."
    automation_condition: "{{ automation_condition.on_cron('0 3 * * *') }}"
    group_name: "aws_external_tables"
    deps:
      - "aws/{{ schema_from_env() }}/stage_common_room_activities"

---

type: dagster_open_platform.lib.SnowflakeCreateOrRefreshComponent
attributes:
  name: ext_common_room_community_members
  database_name: "aws"
  schema_name: "{{ schema_from_env() }}"
  type: "external table"
  role: AWS_WRITER
  partition_by: REPLICATION_DATE
  columns:
    - name: FILENAME
      type: VARCHAR
      as: METADATA$FILENAME
    - name: REPLICATION_DATE
      type: DATE
      as: "cast(split_part(METADATA$FILENAME, '/', 3) || '-' || split_part(METADATA$FILENAME, '/', 4) || '-' || split_part(METADATA$FILENAME, '/', 5) as date)"
  options:
    location: "@stage_common_room_community_members"
    file_format:
      type: JSON
      strip_outer_array: true
      file_extension: ".jsonl"
    pattern: ".*[.]jsonl"
    auto_refresh: false
    refresh_on_create: true
    comment: "External table for stage stage_common_room_community_members"
  asset_attributes:
    description: "Snowflake external table for CommunityMember export data."
    automation_condition: "{{ automation_condition.on_cron('0 3 * * *') }}"
    group_name: "aws_external_tables"
    deps:
      - "aws/{{ schema_from_env() }}/stage_common_room_community_members"

---

type: dagster_open_platform.lib.SnowflakeCreateOrRefreshComponent
attributes:
  name: ext_common_room_groups
  database_name: "aws"
  schema_name: "{{ schema_from_env() }}"
  type: "external table"
  role: AWS_WRITER
  partition_by: REPLICATION_DATE
  columns:
    - name: FILENAME
      type: VARCHAR
      as: METADATA$FILENAME
    - name: REPLICATION_DATE
      type: DATE
      as: "cast(split_part(METADATA$FILENAME, '/', 3) || '-' || split_part(METADATA$FILENAME, '/', 4) || '-' || split_part(METADATA$FILENAME, '/', 5) as date)"
  options:
    location: "@stage_common_room_groups"
    file_format:
      type: JSON
      strip_outer_array: true
      file_extension: ".jsonl"
    pattern: ".*[.]jsonl"
    auto_refresh: false
    refresh_on_create: true
    comment: "External table for stage stage_common_room_groups"
  asset_attributes:
    description: "Snowflake external table for Group export data."
    automation_condition: "{{ automation_condition.on_cron('0 3 * * *') }}"
    group_name: "aws_external_tables"
    deps:
      - "aws/{{ schema_from_env() }}/stage_common_room_groups"
